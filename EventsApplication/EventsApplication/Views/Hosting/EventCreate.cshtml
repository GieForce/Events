@model EventsApplication.Models.Event

@{
    ViewBag.Title = "EventCreate";
}
@Styles.Render("/content/home.css")
<head>
    <link href="~/Content/DateTime/bootstrap-datepicker3.min.css" rel="stylesheet" />
</head>

<h2>EventCreate</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Naam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Naam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Datumstart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="datetime-container" class="container">
                    <div class="input-daterange input-group" id="datepicker">
                        @Html.EditorFor(model => model.Datumstart, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Datumeind, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="datetime-container" class="container">
                    <div class="input-daterange input-group" id="datepicker">
                        @Html.EditorFor(model => model.Datumeind, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
         </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Maxbezoekers, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Maxbezoekers, new { onkeydown = "return ValidateNumber(event);" })
                        @Html.ValidationMessageFor(model => model.Maxbezoekers, "", new { @class = "text-danger" })
                    </div>
                </div>
        <div class="Classskills">
            <div class="form-group">
                @Html.LabelFor(model => model.Locatieid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownList("Locatieding")
                    @Html.ValidationMessageFor(model => model.Locatieid)
                </div>
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "EventIndex")
</div>



<script>

    $('.input-daterange').datepicker({
        format: "dd/mm/yyyy",
        language: "nl",
        autoclose: true,
        todayHighlight: true,
    });
</script>

<script type="text/javascript">
       function ValidateNumber(e) {
           var evt = (e) ? e : window.event;
           var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
           if (charCode > 31 && (charCode < 48 || charCode > 57)) {
               return false;
           }
           return true;
       };
    </script>