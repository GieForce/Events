@model EventsApplication.Models.Locatie
@using System.Data;

  

@{
    ViewBag.Title = "LocatieCreate";
}

<h2>LocatieCreate</h2>

<style type="text/css">



  /* Generic Styling, for Desktops/Laptops */
table {
  width: 100%;
  border-collapse: collapse;
}
/* Zebra striping */
tr:nth-of-type(odd) {
  background: #eee;
}
th {
  background: #333;
  color: white;
  font-weight: bold;
}
td, th {
  padding: 6px;
  border: 1px solid #ccc;
  text-align: left;
}
</style>

@using (Html.BeginForm("LocatieCreate", "Hosting", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Locatie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Naam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Naam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Straat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Straat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Straat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nr, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plaats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plaats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Plaats, "", new { @class = "text-danger" })
            </div>
        </div>

    

    <table>
        <tr><td>Excel file</td><td><input type="file" id="FileUpload1" name="FileUpload1" /></td></tr>
        <tr><td></td><td><input type="submit" id="Submit" name="Submit" value="Submit" /></td></tr>
    </table>

        </div>
}




<div>
    <table id="">

        @if (ViewBag.Data != null)
        {
            <thead>

                @foreach (DataColumn column in (ViewBag.Data as System.Data.DataTable).Columns)
                {
                <th>@column.ColumnName.ToUpper()</th>


                }
                </thead>
            if ((ViewBag.Data as System.Data.DataTable).Rows.Count > 0)
            {
                foreach (DataRow dr in (ViewBag.Data as System.Data.DataTable).Rows)
                {

                    <tr>

                        @foreach (DataColumn column in (ViewBag.Data as System.Data.DataTable).Columns)
                        {
                            <td data-title='@column.ColumnName'>

                                @dr[column].ToString()
                            </td>
                        }




                    </tr>

                }

            }
            else
            {
                int count = (ViewBag.Data as System.Data.DataTable).Columns.Count;
                <tr>

                    <td colspan='@count' style="color:red;">

                        No Data Found.
                    </td>



                </tr>

            }

        }
        else
        {
            if (ViewBag.Error != null)
            {
                <tr>
                    <td style="color:red;">

                        @(ViewBag.Error != null ? ViewBag.Error.ToString() : "")
                    </td>



                </tr>
            }
        }
    </table>
</div>




<div>
    @Html.ActionLink("Back to List", "Index")
</div>
